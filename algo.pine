//@version=6
indicator("Swing QQQ Predictions – Entry-Only with Trade IDs", overlay=true, shorttitle="Swing QQQ TradeIDs")

//──────────────────────────────
// USER INPUT: Trade Type Filter
//──────────────────────────────
displayTradeType = input.string("All", title="Display Trade Type", options=["All", "High", "Medium", "Low"])

//──────────────────────────────
// COMMON TECHNICAL ELEMENTS & INDICATORS
//──────────────────────────────

// Trend Filter: 50-period Simple Moving Average (SMA)
sma50 = ta.sma(close, 50)

// Liquidity Sweep Detection:
// Identify a swing low over the last 5 bars that is recent (within the last 10 bars)
swingLow      = ta.lowest(low, 5) == low
swingLowSince = ta.barssince(swingLow)
liquiditySweepLow = swingLow and (swingLowSince < 10)

// Fair Value Gap (FVG) Detection (Bullish Example):
// Look for an imbalance where the low from 2 bars ago is above the current bar's high,
// and the previous bar closed bullishly.
var float fvgLowBull  = na
var float fvgHighBull = na
var bool  fvgActiveBull = false
if low[2] > high[0] and close[2] > open[2]
    fvgLowBull  := high[0]
    fvgHighBull := low[2]
    fvgActiveBull := true
if fvgActiveBull and close <= fvgLowBull
    fvgActiveBull := false

// Bullish Pin Bar (PB) Detection:
// A bullish pin bar has a long lower wick (over 60% of its range), suggesting a potential reversal.
bullishPinBar = close > open and ((open - low) / (high - low) > 0.6)

// Order Block (OB) Candidate & Retest:
// Identify an order block candidate when the previous candle is bearish and
// the current candle closes above that candle's high.
var float OB_high = na
var float OB_low  = na
var int   OB_bar  = na
obCandidate = (close[1] < open[1]) and (close > high[1])
if obCandidate
    OB_high := high[1]
    OB_low  := low[1]
    OB_bar  := bar_index[1]
// OB Retest: Current low falls within the order block range.
OB_retest = not na(OB_high) and (low >= OB_low) and (low <= OB_high)

//──────────────────────────────
// DEFINE TRADE TRIGGERS BASED ON SIGNAL COMBINATIONS
//──────────────────────────────

// --- LOW ACCURACY TRIGGERS (2 Triggers) ---
lowTrigger1 = bullishPinBar                         // Pin Bar alone
lowTrigger2 = liquiditySweepLow and bullishPinBar     // Liquidity Sweep + Pin Bar

// --- MEDIUM ACCURACY TRIGGERS (3 Triggers) ---
medTrigger1 = liquiditySweepLow and OB_retest         // Liquidity Sweep + OB Retest
medTrigger2 = OB_retest and bullishPinBar             // OB Retest + Pin Bar
medTrigger3 = fvgActiveBull and OB_retest             // FVG + OB Retest

// --- HIGH ACCURACY TRIGGERS (2 Triggers) ---
highTrigger1 = liquiditySweepLow and OB_retest and bullishPinBar  // Liquidity Sweep + OB Retest + Pin Bar
highTrigger2 = fvgActiveBull and OB_retest and bullishPinBar        // FVG + OB Retest + Pin Bar

//──────────────────────────────
// DETERMINE FINAL TRADE ACCURACY LEVEL
// Priority: High > Medium > Low
//──────────────────────────────
var int tradeType = 0      // 0: no trade, 1: Low, 2: Medium, 3: High
var string tradeLabel = "None"
if (highTrigger1 or highTrigger2)
    tradeType := 3
    tradeLabel := "High"
else if (medTrigger1 or medTrigger2 or medTrigger3)
    tradeType := 2
    tradeLabel := "Medium"
else if (lowTrigger1 or lowTrigger2)
    tradeType := 1
    tradeLabel := "Low"
else
    tradeType := 0

//──────────────────────────────
// BUILD THE TRIGGER LOG STRING
// Create a log of which trigger conditions were met (for debugging)
//──────────────────────────────
string myTriggerLog = ""
if tradeType == 3
    if highTrigger1 and not str.contains(myTriggerLog, "LS+OB+PB")
        myTriggerLog += "LS+OB+PB, "
    if highTrigger2 and not str.contains(myTriggerLog, "FVG+OB+PB")
        myTriggerLog += "FVG+OB+PB, "
else if tradeType == 2
    if medTrigger1 and not str.contains(myTriggerLog, "LS+OB")
        myTriggerLog += "LS+OB, "
    if medTrigger2 and not str.contains(myTriggerLog, "OB+PB")
        myTriggerLog += "OB+PB, "
    if medTrigger3 and not str.contains(myTriggerLog, "FVG+OB")
        myTriggerLog += "FVG+OB, "
else if tradeType == 1
    if lowTrigger1 and not str.contains(myTriggerLog, "PB")
        myTriggerLog += "PB, "
    if lowTrigger2 and not str.contains(myTriggerLog, "LS+PB")
        myTriggerLog += "LS+PB, "
if str.endswith(myTriggerLog, ", ")
    myTriggerLog := str.substring(myTriggerLog, 0, str.length(myTriggerLog) - 2)

//──────────────────────────────
// ASSIGN SWING TYPE BASED ON TRADE ACCURACY
// High accuracy trades are considered "Long Swing"; Medium/Low as "Short Swing".
///──────────────────────────────
var string swingType = ""
if tradeType == 3
    swingType := "Long Swing"
else if tradeType == 2 or tradeType == 1
    swingType := "Short Swing"
else
    swingType := "None"

//──────────────────────────────
// ENTRY LOGIC: Log BUY Signals on the Rising Edge of a Trade Signal
// Only log when the trade signal is new (previous bar had no trade signal).
//──────────────────────────────
entrySignal = (tradeType > 0) and (nz(tradeType[1], 0) == 0)
// Global counter for unique trade IDs.
var int tradeCounter = 0
if entrySignal and (displayTradeType == "All" or displayTradeType == tradeLabel)
    tradeCounter += 1
    label.new(bar_index, low, "Buy " + tradeLabel + " #" + str.tostring(tradeCounter) + " " + swingType + " @ " + str.tostring(close, "#.##") + " | Triggers:\n" + myTriggerLog, color=color.new(color.green, 80), textcolor=color.white, style=label.style_label_up, size=size.normal)
    line.new(bar_index, close, bar_index + 5, close, color=color.green, width=2)

//──────────────────────────────
// VISUAL DEBUGGING: Plot Trigger Signals
//──────────────────────────────
plotshape(lowTrigger1, title="Low Trigger (Pin Bar)", location=location.belowbar, color=color.new(color.lime, 0), style=shape.arrowup, size=size.tiny)
plotshape(lowTrigger2, title="Low Trigger (LS+Pin Bar)", location=location.belowbar, color=color.new(color.lime, 0), style=shape.arrowup, size=size.tiny)

plotshape(medTrigger1, title="Medium Trigger (LS+OB)", location=location.belowbar, color=color.new(color.yellow, 0), style=shape.triangleup, size=size.tiny)
plotshape(medTrigger2, title="Medium Trigger (OB+Pin Bar)", location=location.belowbar, color=color.new(color.yellow, 0), style=shape.circle, size=size.tiny)
plotshape(medTrigger3, title="Medium Trigger (FVG+OB)", location=location.belowbar, color=color.new(color.yellow, 0), style=shape.arrowup, size=size.tiny)

plotshape(highTrigger1, title="High Trigger (LS+OB+Pin Bar)", location=location.belowbar, color=color.new(color.red, 0), style=shape.triangleup, size=size.tiny)
plotshape(highTrigger2, title="High Trigger (FVG+OB+Pin Bar)", location=location.belowbar, color=color.new(color.red, 0), style=shape.circle, size=size.tiny)

//──────────────────────────────
// PLOT TREND INDICATOR
//──────────────────────────────
plot(sma50, title="50 SMA", color=color.blue)
plot(na, title="Dummy")
